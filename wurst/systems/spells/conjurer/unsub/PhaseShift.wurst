package PhaseShift

import ChannelAbilityPreset
import ID
import Lodash
import Assets
import ToolTipsUtils
import BuffObjEditing
import ClosureEvents
import ClosureTimers
import DummyCaster
import OrderIds

constant BUFF_ID = compiletime(BUFF_ID_GEN.next())
constant BUFF_ORIGINAL_ID = 'Bpsh' // PhaseShift

constant DUMMY_ABIL_ID = compiletime(ABIL_ID_GEN.next())

constant CAST_RANGE = 0
constant COOLDOWN = 20.
constant MANACOST = 5
constant DURATION = 2.
constant TOOLTIP_NORM = "Phase Shift"
constant TOOLTIP_EXTENDED = "This unit has shifted out of existence and cannot be harmed temporarily."
                        .format(DURATION.toToolTipLightBlue(), COOLDOWN.toToolTipLightBlue())
constant TARGET_ALLOWED = "targetAllowed"

function createBuff()
    new BuffDefinition(BUFF_ID, BUFF_ORIGINAL_ID)
        ..setIcon(Icons.bTNPhaseShift)
        ..setArtSpecial(1,"")
        ..setTooltipNormal(1, TOOLTIP_NORM)
        ..setTooltipNormalExtended(1, "This troll is shifting between dimension, he doesn't take any damage in this state.")

class DummyPhaseShift extends AbilityDefinitionInnerFire
    construct(int newAbilityId)
        super(newAbilityId)
        this.setName("PhaseShiftDummy")
        this.setBuffs(1, toRawCode(BUFF_ID))
        this.setDurationHero(1, DURATION)
        this.setDurationNormal(1, DURATION)
        this.setCastRange(1, 99999)
        this.setManaCost(1, 0)
        this.setRequirements("")
        this.setDamageIncrease(1, 0)
        this.setDefenseIncrease(1, 0)

class PhaseShift extends AbilityDefinitionWindWalk
    construct(int newAbilityId, string hotkey, Pair<int, int> buttonPos)
        super(newAbilityId)
        this.presetManaCost(lvl -> MANACOST)
        this.presetCooldown(lvl -> COOLDOWN)
        this.setHeroAbility(false)
        this.setItemAbility(false)
        this.presetTargetsAllowed(lvl -> TARGET_ALLOWED)
        this.setHotkeyNormal(hotkey)
        this.setName(TOOLTIP_NORM)
        this.presetTooltipNormal(lvl -> makeToolTipNorm(hotkey, TOOLTIP_NORM))
        this.presetTooltipNormalExtended(lvl -> TOOLTIP_EXTENDED)
        this.setIconNormal(Icons.bTNPhaseShift)
        this.setIconResearch(Icons.bTNPhaseShift)
        this.setIconTurnOff(Icons.bTNPhaseShift)
        this.setButtonPositionNormalX(buttonPos.a)
        this.setButtonPositionNormalY(buttonPos.b)
        this.setEffectSound("")
        this.setDurationHero(1, 0.01)

@compiletime function createPhaseShift()
    new PhaseShift(SPELL_PHASE_SHIFT, "R", new Pair(2, 1))
    new DummyPhaseShift(DUMMY_ABIL_ID)
    createBuff()


init
    EventListener.add(EVENT_UNIT_DAMAGED) ->
        let damaged = GetTriggerUnit()
        if damaged.hasAbility(BUFF_ID)
            BlzSetEventDamage(0)
    EventListener.onCast(SPELL_PHASE_SHIFT) (unit caster) ->
        new DummyCaster()
            ..owner(caster.getOwner())
            ..origin(caster.getPos() + vec2(100,0))
            ..castTarget(DUMMY_ABIL_ID, 1, Orders.innerfire, caster)
        doPeriodicallyTimed(0.3, DURATION) cb ->
            if caster.isAlive()
                flashEffect(Abilities.aIilTarget, caster.getPos())
