package SpawningTestHelpers

import ChatCommands
import Game
import SimError
import PlayerExtensions
import GameConfig
import IDUtils
import LegacyColors
import LinkedList
import ID
import Lodash
import HashMap

let unitSpawnList = new HashMap<string, LinkedList<int>>()
..put("hunter"     , asList(UNIT_HUNTER      ,UNIT_WARRIOR          ,UNIT_TRACKER       ,UNIT_JUGGERNAUT              ))
..put("mage"       , asList(UNIT_MAGE        ,UNIT_ELEMENTALIST_NEW ,UNIT_HYPNOTIST     ,UNIT_DEMENTIA_MASTER         ))
..put("priest"     , asList(UNIT_PRIEST      ,UNIT_BOOSTER          ,UNIT_MASTER_HEALER ,UNIT_SAGE                    ))
..put("beastMaster", asList(UNIT_BEAST_MASTER,UNIT_SHAPESHIFTER_WOLF,UNIT_CHICKEN_FORM  ,UNIT_ULTIMATE_FORM           ))
..put("thief"      , asList(UNIT_THIEF       ,UNIT_ESCAPE_ARTIST    ,UNIT_CONTORTIONIST ,UNIT_ASSASSIN                ))
..put("scout"      , asList(UNIT_SCOUT       ,UNIT_OBSERVER         ,UNIT_TRAPPER       ,UNIT_RADAR_SCOUT    ,UNIT_SPY))
..put("gatherer"   , asList(UNIT_GATHERER    ,UNIT_HERB_MASTER      ,UNIT_RADAR_GATHERER,UNIT_OMNIGATHERER            ))
..put("buildings"  , asList(UNIT_ARMORY      ,UNIT_WORKSHOP         ,UNIT_POT           ,UNIT_TANNERY    ,UNIT_WITCH_DOCTORS_HUT, UNIT_MUD_HUT, UNIT_TROLL_HUT))

let itemSpawnList = new HashMap<string, LinkedList<int>>()
..put("herbs"           , asList(ITEM_BLUE_HERB     , ITEM_YELLOW_HERB, ITEM_ORANGE_HERB    , ITEM_PURPLE_HERB, ITEM_RIVER_ROOT, ITEM_RIVER_STEM, ITEM_BUTSU                     ))
..put("armors"          , asList(ITEM_ELK_SKIN_BOOTS, ITEM_BONE_BOOTS , ITEM_ELK_SKIN_GLOVES, ITEM_BONE_GLOVES, ITEM_ELK_SKIN_COAT, ITEM_BONE_COAT, ITEM_SHIELD, ITEM_BONE_SHIELD))
..put("materials"       , asList(ITEM_BONE          , ITEM_TINDER     , ITEM_FLINT          , ITEM_STONE      , ITEM_MANA_CRYSTAL, ITEM_MAGIC                                    ))
..put("craftedMaterials", asList(ITEM_IRON_INGOT    , ITEM_STEEL_INGOT, ITEM_SPIRIT_WATER   , ITEM_SPIRIT_WIND))

let HELP_MESSAGE = (
    GOLD_COLOR + "Create units and items\n|r" +
    GENERAL_COLOR +"-create [pid] [count] [player]\n\n" +
    "Where pid is for example, UNIT_PANTHER or ITEM_ARMORY_KIT" +
    "\ncount the number of spawn\nplayer the player which own the unit, player must be > 0\n" +
    "pid are listed in wurst/_legacy_/lib/IDUtils.wurst\n\n|r"+
    GOLD_COLOR + "Example : \"-create UNIT_PANTHER 2 1\" will spawn 2 panther for player 1\n\n|r"+
    GOLD_COLOR+"Spawn multiple units and items at once\n|r"+
    GENERAL_COLOR +"-spawn herbs/materials/craftedmaterials/buildings [count]\n"+
    "To spawn herbs/materials/all building in order to test crafting"
)

init
    registerGameStartEvent() ->
        if gameConfig.isTestModeEnabled()
            registerCommandAll("create") (triggerPlayer, args) ->
                let idStr = args.get(1).toUpperCase()
                let id = S2ID(idStr)
                var nbrArg = 1
                if args.size() > 2
                    nbrArg = (args.get(2).toInt())

                if id <= 0
                    print(HELP_MESSAGE)
                else
                    let owner = args.size() > 3 ? players[args.get(3).toInt() - 1] : triggerPlayer
                    let troll = triggerPlayer.getTroll()
                    let pos = troll.getPos().polarOffset(troll.getFacingAngle(), 100)

                    if idStr.startsWith("UNIT_")
                        for i = nbrArg downto 1
                            if createUnit(owner, id, pos, angle(0)) == null
                                simError(triggerPlayer, "{0} not found".format(idStr))
                                break
                    else if idStr.startsWith("ITEM_")
                        for i = nbrArg downto 1
                            if createItem(id, pos) == null
                                simError(triggerPlayer, "{0} not found".format(idStr))
                                break
                    else
                        simError(triggerPlayer, "Cannot spawn {0}".format(idStr))

            registerCommandAll("hostile") (triggerPlayer, args) ->
                let units = CreateGroup()..enumUnitsSelected(triggerPlayer, null)
                for u from units
                    u.setOwner(players[PLAYER_NEUTRAL_AGGRESSIVE], true)
                units.destr()
            
            // It's alte, I am tired, didn't spend much thought on this following code, but it works
            registerCommandAll("spawn") (triggerPlayer, args) ->
                let troll = triggerPlayer.getTroll()
                var pos = troll.getPos()
                var count = 1
                let listName = args.get(1).toLowerCase()
                var unitList = unitSpawnList.get(listName)
                var itemList = itemSpawnList.get(listName)
                
                if args.get(2).toInt() > 0
                    count = args.get(2).toInt()

                if unitList == null and itemList == null
                    print(HELP_MESSAGE)
                else
                    let toSpawn = (unitList != null) ? unitList : itemList
                    pos.x += 100
                    pos.y -= (toSpawn.size() / 2) * 100
                    for elem in toSpawn
                        pos.y += 100
                        for i = count downto 1
                            if unitSpawnList.has(listName)
                                createUnit(triggerPlayer, elem, pos, (270.0).asAngleDegrees())
                            else
                                createItem(elem, pos)
