package BeastMaster
import ID
import Troll
import MeatSystem
import EatRawMeat
import IdListConstant
import UnitExtensions

public class BeastMaster extends Troll
    private static let unitTypeId = UNIT_BEAST_MASTER

    static function initialize()
        register(unitTypeId, troll -> new BeastMaster(troll))

    construct(unit whichUnit)
        super(whichUnit)

        // TODO : rework this into Shapeshift.wurst
        whichUnit.makeAbilityPermanent(ABILITY_INVENTORY_4_SLOT, true)
        whichUnit.makeAbilityPermanent(SPELL_PANIC, true)
        whichUnit.makeAbilityPermanent(SPELL_REST, true)
        whichUnit.makeAbilityPermanent(ABILITY_TEAM_GLOW, true)
        whichUnit.makeAbilityPermanent(ABILITY_ID_PICKUPMEAT_TROLL, true)
        whichUnit.makeAbilityPermanent(ABILITY_ID_EAT_RAW_MEAT_DISABLED, true)
        whichUnit.makeAbilityPermanent(SPELL_BUILDING_CRAFT_SPELLBOOK_ID, true)
        whichUnit.makeAbilitiesPermanent(CRAFT_BUILDING_SPELL_ID_LIST, true)

    construct(player whichPlayer, vec2 pos)
        super(whichPlayer, pos)

    construct(player whichPlayer, vec2 pos, angle facing)
        super(whichPlayer, pos, facing)

    override function getTypeId() returns int
        return unitTypeId

    override function postCreate()
        super.postCreate()

init
    BeastMaster.initialize()
