package FlyingUnitDefinition

// Standard library imports:
import Assets
import UnitObjEditing
import ObjectIds
import LinkedList

// Local imports:
import LocalObjectIDs

// The abilities for a standard hawk.
constant HAWK_ABIL = commaList(
    AbilityIds.wander,
    AbilityIds.inventory,
    AbilityIds.trueSight1
)

// The abilities for a tamed hawk, which may be incremented during growth.
public let hawkAbilities = asList(
    'A03T',  // Gathering Radius
    'A03V',  // Health
    'A03W',  // Inventory
    'A03U',  // Movement Radius
    'A03S'   // Movement Speed
)

// TODO: Use commaList for lists.
constant TAMED_HAWK_ABIL = hawkAbilities.joinBy((int i) -> i.toRawCode(), ",")

public let flyingPetBasicAbilities = asList(
    ABILITY_PET_REVIVE_INFO,
    ABILITY_PET_ARMOR_UPGD,
    ABILITY_PET_MAGIC_RESIST_UPGD,
    ABILITY_PET_HEALTH_UPGD,
    ABILITY_PET_SNACK
)

constant FLYING_PET_BASIC_ABIL = flyingPetBasicAbilities.joinBy((int i) -> i.toRawCode(), ",")

function createFlyingAnimal(int unitId) returns UnitDefinition
    return new UnitDefinition(unitId, UnitIds.wareagle1)
        ..setGoldBountyAwardedBase(0)
        ..setGoldBountyAwardedNumberofDice(0)
        ..setGoldBountyAwardedSidesperDie(0)
        ..setSightRadiusDay(75)
        ..setSightRadiusNight(75)
        ..setHitPointsRegenerationType("")
        ..setNameEditorSuffix("(Wurst)")
        ..setMovementHeight(450)
        ..setMovementHeightMinimum(50)
        ..setUpgradesUsed("")

@compiletime function createHawk() returns UnitDefinition
    return createFlyingAnimal(UNIT_HAWK)
        ..setNormalAbilities(HAWK_ABIL)
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(4)
        ..setHitPointsMaximumBase(135)
        ..setName("Hawk")

@compiletime function createHawkHatchling() returns UnitDefinition
    return createFlyingAnimal(UNIT_HAWK_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setScalingValue(0.5)
        ..setSpeedBase(300)
        ..setLevel(0)
        ..setHitPointsMaximumBase(45)
        ..setName("Hawk Hatchling")


function createDragonHatchling(int unitId) returns UnitDefinition
    return createFlyingAnimal(unitId)
        ..setScalingValue(0.5)
        ..setSpeedBase(300)
        ..setLevel(0)
        ..setHitPointsMaximumBase(75)
        ..setUnitSoundSet(Soundsets.azureDragon)

@compiletime function fireDragonHatchling() returns UnitDefinition
    return createDragonHatchling(UNIT_RED_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setName("Fire Dragon Hatchling")
        ..setModelFile(Units.redDragon1)
        ..setIconGameInterface(Icons.bTNRedDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function corrosiveDragonHatchling() returns UnitDefinition
    return createDragonHatchling(UNIT_FOREST_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setName("Corrosive Dragon Hatchling")
        ..setModelFile(Units.greenDragon1)
        ..setIconGameInterface(Icons.bTNGreenDragon)

@compiletime function frostDragonHatchling() returns UnitDefinition
    return createDragonHatchling(UNIT_FROST_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setName("Frost Dragon Hatchling")
        ..setModelFile(Units.azureDragon1)
        ..setIconGameInterface(Icons.bTNAzureDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function stormDragonHatchling() returns UnitDefinition
    return createDragonHatchling(UNIT_BRONZE_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setName("Storm Dragon Hatchling")
        ..setModelFile(Units.bronzeDragon1)
        ..setIconGameInterface(Icons.bTNBronzeDragon)
        ..setHitPointsMaximumBase(75)

@compiletime function netherDragonHatchling() returns UnitDefinition
    return createDragonHatchling(UNIT_NETHER_DRAGON_HATCHLING)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setName("Nether Dragon Hatchling")
        ..setModelFile(Units.netherDragon)
        ..setIconGameInterface(Icons.bTNNetherDragon)
        ..setHitPointsMaximumBase(75)


// Matured
@compiletime function createTamedHawk() returns UnitDefinition
    return createFlyingAnimal(UNIT_TAMED_HAWK)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(0)
        ..setHitPointsMaximumBase(90)
        ..setName("Tamed Hawk")

function createDragon(int unitId) returns UnitDefinition
    return createFlyingAnimal(unitId)
        ..setScalingValue(1)
        ..setSpeedBase(400)
        ..setLevel(0)
        ..setHitPointsMaximumBase(165)
        ..setUnitSoundSet(Soundsets.azureDragon)

@compiletime function fireDragonDefinition() returns UnitDefinition
    return createDragon(UNIT_RED_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setModelFile(Units.redDragon1)
        ..setIconGameInterface(Icons.bTNRedDragon)
        ..setName("Tamed Fire Dragon")

@compiletime function corrosiveDragonDefinition() returns UnitDefinition
    return createDragon(UNIT_FOREST_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setModelFile(Units.greenDragon1)
        ..setIconGameInterface(Icons.bTNGreenDragon)
        ..setName("Tamed Corrosive Dragon")

@compiletime function frostDragonDefinition() returns UnitDefinition
    return createDragon(UNIT_FROST_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setModelFile(Units.azureDragon1)
        ..setIconGameInterface(Icons.bTNAzureDragon)
        ..setName("Tamed Frost Dragon")

@compiletime function stormDragonDefinition() returns UnitDefinition
    return createDragon(UNIT_BRONZE_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setModelFile(Units.redDragon1)
        ..setIconGameInterface(Icons.bTNBronzeDragon)
        ..setName("Tamed Storm Dragon")

@compiletime function netherDragonDefinition() returns UnitDefinition
    return createDragon(UNIT_NETHER_DRAGON)
        ..setNormalAbilities(FLYING_PET_BASIC_ABIL)
        ..setModelFile(Units.netherDragon)
        ..setIconGameInterface(Icons.bTNNetherDragon)
        ..setName("Tamed Nether Dragon")
