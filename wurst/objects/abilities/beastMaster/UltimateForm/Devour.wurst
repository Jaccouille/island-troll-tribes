package Devour

// Standard lib Imports:
import ChannelAbilityPreset
import ClosureEvents
import HashMap
import Assets
import OrderIds

// Local Imports:
import SimError
import PlayerExtensions
import LocalObjectIDs
import ColorUtils
import StringExtensions
import ToolTipsUtils

let ABIL_DODGE = compiletime(ABIL_ID_GEN.next())

let upgradeFromAnimalMap = new HashMap<int, int>()
    ..put(UNIT_ELK, UPGD_RENDO_JUMP)
    ..put(UNIT_JUNGLE_WOLF, UPGD_RENDO_WOLF_BITE)
    ..put(UNIT_SNAKE, UPGD_RENDO_SNAKE_TOXIN)
    ..put(UNIT_PANTHER, UPGD_RENDO_PANTHER_INSTINCT)

let upgradeAbilityMap = new HashMap<int, int>()
    ..put(ABILITY_RENDO_JUMP, UPGD_RENDO_JUMP)
    ..put(ABILITY_RENDO_WOLF_BITE, UPGD_RENDO_WOLF_BITE)
    ..put(ABILITY_RENDO_SNAKE_TOXIN, UPGD_RENDO_SNAKE_TOXIN)
    ..put(ABILITY_RENDO_PANTHER_INSTINCT, UPGD_RENDO_PANTHER_INSTINCT)

let COOLDOWN = 30.

let TT_NORM = "Devour"
let TT_EXT = "" +
    "Rendo devour an animal and absord its genes, gaining an ability based on the type of " +
    "animal he ate. Rendo swallow up and digest every part of the animal, therefore, no hides " +
    "or bones are dropped upon the animal death.\n" +
    "Following animal give an ability upon devoration :\n" +
    "Elk, Snake, Wolf, Panther".color(GOLD_COLOR) +
    makeToolTipCooldown(COOLDOWN)

@compiletime function createDevourSpell() returns ChannelAbilityPreset
    return new ChannelAbilityPreset(ABILITY_RENDO_DEVOUR, 1, true)
        ..presetTargetTypes(Targettype.UNIT)
        ..presetCooldown(lvl -> 0)
        ..presetManaCost(lvl -> 0)
        ..presetCastRange(lvl -> 100)
        ..presetButtonPosNormal(3, 1)
        ..setFollowThroughTime(1, 1.5)
        ..setEffectSound(Sounds.devour)
        ..setIconNormal(Icons.bTNDevour)
        ..setTargetsAllowed(1, commaList(
            TargetsAllowed.enemies,
            TargetsAllowed.nonhero,
            TargetsAllowed.organic,
            TargetsAllowed.nonancient
        ))
        ..setAnimationNames("stand - 3")


init
    EventListener.onTargetCast(ABILITY_RENDO_DEVOUR) (unit caster, unit target) ->
        if target.getHP() < 50
            flashEffect(Objects.humanSmallDeathExplode, target.getPos())
            target.remove()
            if upgradeFromAnimalMap.has(target.getTypeId())
                caster.getOwner().setTechResearched(
                    upgradeFromAnimalMap.get(target.getTypeId()), 1)
        else
            simError(caster.getOwner(), "Target health point must be below 50")
            caster.issueImmediateOrderById(Orders.stop)

    EventListener.add(EVENT_PLAYER_UNIT_SPELL_CAST) ->
        let abilId = EventData.getSpellAbilityId()
        let caster = EventData.getSpellAbilityUnit()
        if upgradeAbilityMap.has(abilId)
            caster.getOwner().setTechResearched(upgradeAbilityMap.get(abilId), 0)
