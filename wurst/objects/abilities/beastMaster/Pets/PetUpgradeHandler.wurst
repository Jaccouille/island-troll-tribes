package PetUpgradeHandler

// Standard library imports:
import Assets
import ChannelAbilityPreset
import ClosureEvents
import HashMap
import LinkedList
import UpgradeObjEditing
import Ability

// Local imports:
import LocalAssets
import LocalObjectIDs
import MagicResistance
import Pets
import ToolTipsUtils
import Transformation
import PlayerExtensions
import PetMana
import ColorUtils
import StringExtensions
import UnitExtensions


public let petUpgradeHandlerInstance = new HashMap<unit, PetUpgradeHandler>()

public class PetUpgradeHandler
    player petOwner
    unit pet
    unit caster
    real initialScale
    real currentScale

    construct(unit caster, unit pet)
        this.petOwner = caster.getOwner()
        this.pet = pet
        this.initialScale = BlzGetUnitRealField(pet, UNIT_RF_SCALING_VALUE)
        EventListener.add(pet, EVENT_PLAYER_UNIT_SPELL_CAST, () -> upgradePet())

    function resetUpgrades()
        petOwner.setTechResearched(UPGD_PET_ATTACK_DAMAGE, 0)
        petOwner.setTechResearched(UPGD_PET_ARMOR, 0)
        petOwner.setTechResearched(UPGD_PET_MAGIC_RESISTANCE, 0)
        petOwner.setTechResearched(UPGD_PET_HEALTH, 0)
        destroy this

    function upgradePet()
        let abil = EventData.getSpellAbility()
        let abilId = EventData.getSpellAbilityId()

        switch abilId
            case ABILITY_PET_DAMAGE
                petOwner.addTechResearched(UPGD_PET_ATTACK_DAMAGE, 1)
            case ABILITY_PET_ARMOR
                petOwner.addTechResearched(UPGD_PET_ARMOR, 1)
            case ABILITY_PET_MAGIC_RESIST
                petOwner.addTechResearched(UPGD_PET_MAGIC_RESISTANCE, 1)
                pet.setMagicResist(petOwner.getTechCount(UPGD_PET_MAGIC_RESISTANCE, false))
            case ABILITY_PET_HEALTH
                // Increase scale by 5% for every upgrade, durr durr big bear
                pet.setScale(initialScale + initialScale * 0.05 * petOwner.getTechCount(UPGD_PET_HEALTH, false))
                petOwner.addTechResearched(UPGD_PET_HEALTH, 1)

        if pet.getAbilityLevel(abilId) > BlzGetAbilityIntegerField(abil, ABILITY_IF_LEVELS)
            pet.disableAbility(abilId, false, false)

    ondestroy
        petUpgradeHandlerInstance.remove(pet)
