package SpellBookInitializer

import AbilityObjectCreationUtils
import LocalObjectIDs
import HashMap
import SpellBookHashMap
import Transformation
import Assets
import LocalAssets

let TOOLTIP_TRACKER_SPELLBOOK         = "The Tracker Knowledge, contains various spells to track a target."
let TOOLTIP_WARRIOR_SPELLBOOK         = "The Warrior Skills, contains description of the warrior abilities."
let TOOLTIP_JUGGERNAUT_SPELLBOOK      = "The Juggernaut Skill set, can use spells from tracker & warrior too."
let TOOLTIP_MAGE_SPELLBOOK            = "The Mage Spells, contains various offensive spells."
let TOOLTIP_ELEMENTALIST_SPELLBOOK    = "The Elementalist Masteries, contains various damage dealing spells."
let TOOLTIP_HYPNOTIST_SPELLBOOK       = "The Hypnotist Voodoo magic, contains various crowd control and energy zapping spells."
let TOOLTIP_DEMENTIA_MASTER_SPELLBOOK = "The Dementia Master Black Magic, contains odd damage dealing spells."
let TOOLTIP_PRIEST_SPELLBOOK          = "The Priest Spells, contains various defensive spells."
let TOOLTIP_BOOSTER_SPELLBOOK         = "The Booster Spells, contains various buffing spells."
let TOOLTIP_MASTER_HEALER_SPELLBOOK   = "The Master Healer Healing Prowess, contains various healing spells."
let TOOLTIP_SAGE_SPELLBOOK            = "The Sage Shamanic Art, contains the most powerfull buff a troll can cast ."
let TOOLTIP_SHAPESHIFTER_SPELLBOOK    = "Choose another animal form to become."
let TOOLTIP_ESCAPE_ARTIST_SPELLBOOK   = "The Escape Artist Physical Abilities, contains another set of evasion spells."
let TOOLTIP_CONTORTIONIST_SPELLBOOK   = "The Contortionist Magical Abilities, contais another set of evasion spells."
let TOOLTIP_TRAPPER_SPELLBOOK         = "The Trapper Toolkit, contains a few trap spell."
let TOOLTIP_OBSERVER_SPELLBOOK        = "The Observer spells, contains various spells to observe those around him."
let TOOLTIP_ADVANCED_RADAR_SPELLBOOK  = "An improved better radar to locate unit around him with high precision."
let TOOLTIP_ITEM_RADAR                = "Contains spells allowing the gatherer to locate the items nearby using minimap ping."
let TOOLTIP_DRUID_SPELLBOOK           = "Spells that connect the Druid and his team with the ebb and flow of life."

let TOOLTIP_MAGE_INHERITED         = "Inherited Spells from the Mage."
let TOOLTIP_DEMENTIA_INHERITED     = "A bunch of assorted mage spells."
let TOOLTIP_PRIEST_INHERITED       = "Inherited Spells from the Priest."
let TOOLTIP_SAGE_INHERITED         = "A bunch of assorted booster & master healer spells."
let TOOLTIP_PET_SPELLS             = "Use these to control your pet."
let TOOLTIP_RENDO_ABILITIES        = "Rendo Abilities."
let TOOLTIP_THIEF_INHERITED        = "Inherited Spells from the Thief."
let TOOLTIP_ASSASSIN               = "All the evasion skills you'll ever need."
let TOOLTIP_SPY_INHERITED          = "All the scouting skills you'll ever need."
let TOOLTIP_GATHERER_INHERITED     = "An improved item radar, can cast multiple spell at same time."
let TOOLTIP_OMNIGATHERER_INHERITED = "Contains all spells from the gatherer class."

// Hero Spellbook
@compiletime function createHeroSpellBookWayOfTheTracker()
        createHeroSpellBook(ABILITY_TRACKER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_TRACKER_SPELLBOOK)
                ..setAbilitiesPerLevel(TRACKER_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNNecromancerAdept)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Way of the Tracker")

@compiletime function createHeroSpellBookWarriorSkills()
        createHeroSpellBook(ABILITY_WARRIOR_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_WARRIOR_SPELLBOOK)
                ..setAbilitiesPerLevel(WARRIOR_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(LocalIcons.bTNTrollPredator)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Warrior Skills")

@compiletime function createHeroSpellBookOffensiveSpells()
        createHeroSpellBook(ABILITY_MAGE_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_MAGE_SPELLBOOK)
                ..setAbilitiesPerLevel(MAGE_ABILITY_HASH)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNNecromancerAdept)
                ..setRequiredLevel(2)
                ..setLevelSkipRequirement(1)
                ..setNameEnhance("R", "Offensive Spells")

@compiletime function createHeroSpellBookElementalistSpells()
        createHeroSpellBook(ABILITY_ELEMENTALIST_NEW_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_ELEMENTALIST_SPELLBOOK)
                ..setAbilitiesPerLevel(ELEMENTALIST_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNManual)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Elementalist Spells")

@compiletime function createHeroSpellBookHypnotistSpells()
        createHeroSpellBook(ABILITY_HYPNOTIST_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_HYPNOTIST_SPELLBOOK)
                ..setAbilitiesPerLevel(HYPNOTIST_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNBookOfTheDead)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Hypnotist Spells")

@compiletime function createHeroSpellBookDementiaSpells()
        createHeroSpellBook(ABILITY_DEMENTIA_MASTER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_DEMENTIA_MASTER_SPELLBOOK)
                ..setAbilitiesPerLevel(DEMENTIA_MASTER_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNNecromancerMaster)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Dementia Spells")

@compiletime function createHeroSpellBookDefensiveSpells()
        createHeroSpellBook(ABILITY_PRIEST_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_PRIEST_SPELLBOOK)
                ..setAbilitiesPerLevel(PRIEST_ABILITY_HASH)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNManual)
                ..setRequiredLevel(2)
                ..setLevelSkipRequirement(1)
                ..setNameEnhance("R", "Defensive Spells")

@compiletime function createHeroSpellBookBoosterSpells()
        createHeroSpellBook(ABILITY_BOOSTER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_BOOSTER_SPELLBOOK)
                ..setAbilitiesPerLevel(BOOSTER_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNSorceressMaster)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Booster Spells")

@compiletime function createHeroSpellBookMasterHealerSpells()
        createHeroSpellBook(ABILITY_MASTER_HEALER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_MASTER_HEALER_SPELLBOOK)
                ..setAbilitiesPerLevel(MASTER_HEALER_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNSorceressMaster)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Master Healer Spells")

@compiletime function createHeroSpellBookSageSpells()
        createHeroSpellBook(ABILITY_SAGE_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_SAGE_SPELLBOOK)
                ..setAbilitiesPerLevel(SAGE_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNSorceressMaster)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Sage Spells")

@compiletime function createHeroSpellBookShapeshifterForms()
        createHeroSpellBook(ABILITY_SHAPESHIFTER_FORM, 4)
                ..setTooltipNormalExtended(1, TOOLTIP_SHAPESHIFTER_SPELLBOOK)
                ..setAbilitiesPerLevel(SHAPESHIFTER_ABILITY_HASH)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNBearForm)
                ..setRequiredLevel(1)
                ..setLevelSkipRequirement(1)
                ..setNameEnhance("R", "Shapeshifter Forms")

@compiletime function createHeroSpellBookPhysicalEvasionSpells()
        createHeroSpellBook(ABILITY_ESCAPE_ARTIST_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_ESCAPE_ARTIST_SPELLBOOK)
                ..setAbilitiesPerLevel(ESCAPE_ARTIST_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNSpellBookBLS)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Physical Evasion Spells")

@compiletime function createHeroSpellBookMagicalEvasionSpells()
        createHeroSpellBook(ABILITY_CONTORTIONIST_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_CONTORTIONIST_SPELLBOOK)
                ..setAbilitiesPerLevel(CONTORTIONIST_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNSpellBookBLS)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Magical Evasion Spells")

@compiletime function createHeroSpellBookAssassinSpells()
        createHeroSpellBook(ABILITY_ASSASSIN_SPELLBOOK, 1)
                ..setTooltipNormalExtended(1, TOOLTIP_ASSASSIN)
                ..setAbilitiesPerLevel(ASSASSIN_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNTome)
                ..setRequiredLevel(1)
                ..setLevelSkipRequirement(1)
                ..setNameEnhance("E", "Assassin Spells")

@compiletime function createHeroSpellBookTrapToolkit()
        createHeroSpellBook(ABILITY_TRAPPER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_TRAPPER_SPELLBOOK)
                ..setAbilitiesPerLevel(TRAPPER_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNPackBeast)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("R", "Trap Toolkit")

@compiletime function createHeroSpellBookOberserverSpells()
        createHeroSpellBook(ABILITY_OBSERVER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_OBSERVER_SPELLBOOK)
                ..setAbilitiesPerLevel(OBSERVER_ABILITY_HASH)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNTome)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("R", "Oberserver Spells")

@compiletime function createHeroSpellBookItemRadar()
        createHeroSpellBook(ABILITY_GATHERER_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_ITEM_RADAR)
                ..setAbilitiesPerLevel(GATHERER_ABILITY_HASH)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNSpy)
                ..setRequiredLevel(2)
                ..setLevelSkipRequirement(1)
                ..setNameEnhance("R", "Item Radar")

@compiletime function createHeroSpellBookDruidicSpells()
        createHeroSpellBook(ABILITY_DRUID_SPELLBOOK, 3)
                ..setTooltipNormalExtended(1, TOOLTIP_DRUID_SPELLBOOK)
                ..setAbilitiesPerLevel(DRUID_ABILITY_HASH)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNEntrapmentWard)
                ..setRequiredLevel(0)
                ..setLevelSkipRequirement(0)
                ..setNameEnhance("E", "Druidic Spells")


// Normal spell book
@compiletime function createSpellBookJuggernautInheritedSpells()
        createSpellBook(ABILITY_JUGGERNAUT_SPELLBOOK)
                ..setNameEnhance("E", "Juggernaut Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_JUGGERNAUT_SPELLBOOK)
                ..setSpellList(1, SS_HUNTER_INHERITED_SPELL)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(LocalIcons.bTNTrollPredator)

@compiletime function createSpellBookMageInheritedSpells()
        createSpellBook(ABILITY_SUB_MAGE_INHERITED_SPELLBOOK)
                ..setNameEnhance("R", "Mage Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_MAGE_INHERITED)
                ..setSpellList(1, SUB_MAGE_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNNecromancerAdept)

@compiletime function createSpellBookDementiaInheritedSpells()
        createSpellBook(ABILITY_DEMENTIA_MASTER_INHERITED_SPELLBOOK)
                ..setNameEnhance("R", "Dementia Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_DEMENTIA_INHERITED)
                ..setSpellList(1, SS_MAGE_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNNecromancerAdept)

@compiletime function createSpellBookPriestInheritedSpells()
        createSpellBook(ABILITY_SUB_PRIEST_SPELLBOOK)
                ..setNameEnhance("R", "Priest Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_PRIEST_INHERITED)
                ..setSpellList(1, SUB_PRIEST_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNManual)

@compiletime function createSpellBookSageInheritedSpells()
        createSpellBook(ABILITY_SAGE_INHERITED_SPELLBOOK)
                ..setNameEnhance("R", "Sage Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_SAGE_INHERITED)
                ..setSpellList(1, SS_PRIEST_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNManual)

@compiletime function createSpellBookPetSpells()
        createSpellBook(ABILITY_PET_SPELLS)
                ..setNameEnhance("R", "Pet Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_PET_SPELLS)
                ..setSpellList(1, PET_SPELLS)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(LocalIcons.bTNBeastCall)

@compiletime function createSpellBookRendoEvolution()
        createSpellBook(ABILITY_ULTIMATE_FORM_SPELLBOOK)
                ..setNameEnhance("E", "Rendo's Evolution")
                ..setTooltipNormalExtended(1, TOOLTIP_RENDO_ABILITIES)
                ..setSpellList(1, RENDO_EVOLUTION)
                ..presetButtonPosNormal(1, 1)
                ..setIconNormal(Icons.bTNForceOfNature)
                ..setBaseOrderID(1, "unsummon")

@compiletime function createSpellBookAdvancedScoutRadar()
        createSpellBook(ABILITY_ADVANCED_RADAR_SPELLBOOK_ID)
                ..setNameEnhance("R", "Advanced Scout Radar")
                ..setTooltipNormalExtended(1, TOOLTIP_ADVANCED_RADAR_SPELLBOOK)
                ..setSpellList(1, TRAPPER_ADVANCED_RADAR)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNSpy)

@compiletime function createSpellBookSpyInheritedSpells()
        createSpellBook(ABILITY_SPY_INHERITED_SPELLBOOK)
                ..setNameEnhance("R", "Spy Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_SPY_INHERITED)
                ..setSpellList(1, SS_SCOUT_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNTome)

@compiletime function createSpellBookAdvancedItemRadar()
        createSpellBook(ABILITY_RADAR_GATHERER_SPELLBOOK)
                ..setNameEnhance("R", "Advanced Item Radar")
                ..setTooltipNormalExtended(1, TOOLTIP_GATHERER_INHERITED)
                ..setSpellList(1, SUB_GATHERER_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNSpy)

@compiletime function createSpellBookOmnigathererInheritedSpells()
        createSpellBook(ABILITY_OMNIGATHERER_INHERITED_SPELLBOOK)
                ..setNameEnhance("R", "Omnigatherer Inherited Spells")
                ..setTooltipNormalExtended(1, TOOLTIP_OMNIGATHERER_INHERITED)
                ..setSpellList(1, SS_GATHERER_INHERITED_SPELL)
                ..presetButtonPosNormal(2, 1)
                ..setIconNormal(Icons.bTNTome)


init
        registerAfterEffect() (unit target, int unitID) ->
                // Refresh the spellbook to fix access issues.
                // TODO: Figure out why only this spellbook breaks.
                if target.hasAbility(ABILITY_PET_SPELLS)
                        target.removeAbility(ABILITY_PET_SPELLS)
                        target.addAbility(ABILITY_PET_SPELLS)
