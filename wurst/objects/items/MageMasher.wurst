package MageMasher

// Standard lib Imports:
import AbilityObjEditing
import DamageType
import DummyCaster
import LinkedList
import ObjectIdGenerator
import Orders

// Local Imports:
import LocalObjectIDs
import Classes

let MANABURN_ID = compiletime(ABIL_ID_GEN.next())
let DRAIN_AMOUNT = 10.
let TARGET_CLASSES = asList(
    UNIT_MAGE,
    UNIT_PRIEST
)

@compiletime function createDummyManaburn()
    new AbilityDefinitionManaBurndemon(MANABURN_ID)
        ..setAnimationNames("")
        ..setHeroAbility(false)
        ..setItemAbility(false)
        ..setLevels(1)
        ..presetCooldown(lvl -> 0)
        ..presetBoltDelay(lvl -> 0.15)
        ..presetBoltLifetime(lvl -> 0.4)
        ..presetCastRange(lvl -> 500)
        ..presetCastingTime(lvl -> 0)
        ..presetMaxManaDrained(lvl -> DRAIN_AMOUNT)

function onDamage()
    // Look up the state.
    let origin = DamageEvent.getSource()
    let target = DamageEvent.getTarget()
    let owner = origin.getOwner()

    // Filter out irrelevant events.
    if not origin.hasItemById(ITEM_MAGE_MASHER)
        return

    print("Checking mana burn.")
    // Prevent targeting allies.
    if origin.isAllyOf(target)
        return
    print("Isn't ally confirmed.")

    // Restrict the effects to spellcasters.
    if not TARGET_CLASSES.has(target.getTrollBaseClass())
        return
    print("Is caster confirmed.")

    // Burn mana.
    new DummyCaster()
        ..delay(0.45)
        ..owner(owner)
        ..origin(origin.getPos())
        ..castTarget(MANABURN_ID, 1, Orders.manaburn, target)

init
    DamageEvent.addListener(-> onDamage())
