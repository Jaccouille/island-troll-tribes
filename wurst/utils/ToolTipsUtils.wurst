package ToolTipsUtils

import LegacyColors

function real.formatForTooltip() returns string
    if this < 1 and this > 0
        return R2I(this * 100).toString()+"%"
    else
        return this.toInt().toString()

public function makeToolTipNorm(string hotkey, string toolTip) returns string
    let description = GENERAL_COLOR+"["+SPECIAL_COLOR+hotkey+GENERAL_COLOR+"] - "+toolTip
    return description

public function makeToolTipNormAura(string toolTip) returns string
    let description = GENERAL_COLOR + toolTip
    return description

public function real.toToolTip() returns string
    return (this.formatForTooltip())

public function real.toToolTipRed() returns string
    return (COLOR_RED + this.formatForTooltip() + "|r")

public function real.toToolTipGreen() returns string
    return (COLOR_GREEN + this.formatForTooltip() + "|r")

public function real.toToolTipBlue() returns string
    return (COLOR_BLUE + this.formatForTooltip() + "|r")

public function real.toToolTipTeal() returns string
    return (COLOR_TEAL + this.formatForTooltip() + "|r")

public function real.toToolTipOrange() returns string
    return (COLOR_ORANGE + this.formatForTooltip() + "|r")

public function real.toToolTipYellow() returns string
    return (COLOR_YELLOW + this.formatForTooltip() + "|r")

public function real.toToolTipPurple() returns string
    return (COLOR_PURPLE + this.formatForTooltip() + "|r")

public function real.toToolTipLightBlue() returns string
    return (COLOR_LIGHT_BLUE + this.formatForTooltip() + "|r")

public function real.toToolTipGray() returns string
    return (COLOR_GRAY + this.formatForTooltip() + "|r")

public function real.toToolTipDarkGreen() returns string
    return (COLOR_DARK_GREEN + this.formatForTooltip() + "|r")

public function real.toToolTipPink() returns string
    return (COLOR_PINK + this.formatForTooltip() + "|r")

public function real.toToolTipBrown() returns string
    return (COLOR_BROWN + this.formatForTooltip() + "|r")
